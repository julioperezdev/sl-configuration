
--QUERIES TO FIRST PRESENTATION
CREATE SCHEMA IF NOT EXISTS SL;
CREATE TABLE IF NOT EXISTS SL.CLIENT(
ID varchar(255) not null,
ADDRESS varchar(255),
DESCRIPTION varchar(255),
NAME varchar(255),
PHONE varchar(255),
UPDATED_AT timestamp(6),
CREATED_AT timestamp(6),
PRIMARY KEY (ID)
);

CREATE TABLE IF NOT EXISTS SL.CLIENT_DIFFERENCE(
ID varchar(255) not null,
CLIENT_ID varchar(255),
DESCRIPTION varchar(255),
DIFFERENCE_TYPE varchar(255),
DIFFERENCE_STATUS varchar(255),
AMOUNT real,
CREATED_AT timestamp(6),
UPDATED_AT timestamp(6),
PRIMARY KEY (ID)
);

CREATE TABLE IF NOT EXISTS SL.CURRENCY(
ID varchar(255) not null,
NAME varchar(255),
BUY_PRICE real,
SELL_PRICE real,
UPDATED_AT timestamp(6),
PRIMARY KEY (ID)
);


CREATE TABLE IF NOT EXISTS SL.NOTE(
ID varchar(255) not null,
COLOR varchar(255),
DESCRIPTION varchar(255),
CREATED_AT timestamp(6),
UPDATED_AT timestamp(6),
PRIMARY KEY (ID)
);

CREATE TABLE IF NOT EXISTS SL.PROVIDER(
ID varchar(255) not null,
ADDRESS varchar(255),
NAME varchar(255),
PHONE varchar(255),
UPDATED_AT timestamp(6),
CREATED_AT timestamp(6),
PRIMARY KEY (ID)
);

CREATE TABLE IF NOT EXISTS SL.SELLER(
ID varchar(255) not null,
DESCRIPTION varchar(255),
NAME varchar(255),
PHONE varchar(255),
UPDATED_AT timestamp(6),
CREATED_AT timestamp(6),
PRIMARY KEY (ID)
);

--QUERIES TO SECOUND PRESENTATION

--BUY_OPERATION
CREATE TABLE IF NOT EXISTS SL.BUY_OPERATION(
ID varchar(255) not null,
CLIENT_ID varchar(255),
CURRENCY_MULTI_BOX varchar(255),
PRICE real,
QUANTITY real,
PERCENT real,
TOTAL real,
OFFICE_CHECK boolean,
OPERATION_STATUS varchar(255),
RESERVE real,
CREATED_AT timestamp(6),
UPDATED_AT timestamp(6),
PRIMARY KEY (ID)
);
--SELL_OPERATION
CREATE TABLE IF NOT EXISTS SL.SELL_OPERATION(
ID varchar(255) not null,
CLIENT_ID varchar(255),
CURRENCY_MULTI_BOX varchar(255),
PRICE real,
QUANTITY real,
SUB_PROFIT real,
PROFIT real,
TOTAL real,
SELLER_ID varchar(255),
SELLER_PROFIT real,
OPERATION_STATUS varchar(255),
CREATED_AT timestamp(6),
UPDATED_AT timestamp(6),
PRIMARY KEY (ID)
);
--MULTIBOX
CREATE TABLE IF NOT EXISTS SL.MULTIBOX(
ID varchar(255) not null,
UPDATED_AT timestamp(6),
CURRENCY_BOX varchar(255),
OPERATION_ID varchar(255),
OPERATION_TYPE varchar(255),
QUANTITY real,
QUANTITY_OPERATION real,
MULTI_BOX_STATUS varchar(255),
PRIMARY KEY (ID)
);

--BALANCE
CREATE TABLE IF NOT EXISTS SL.BALANCE(
ID varchar(255) not null,
PROFIT real,
OPERATION_ID varchar(255),
CREATED_AT timestamp(6),
UPDATED_AT timestamp(6),
OPERATION_TYPE varchar(255),
QUANTITY_OPERATION real,
PRIMARY KEY (ID)
);
--SELER_BOX
CREATE TABLE IF NOT EXISTS SL.SELLER_BOX(
ID varchar(255) not null,
QUANTITY real,
QUANTITY_OPERATION real,
OPERATION_TYPE varchar(255),
NAME varchar(255),
CREATED_AT timestamp(6),
UPDATED_AT timestamp(6),
PRIMARY KEY (ID)
);

--SELLER_COMMISSION
CREATE TABLE IF NOT EXISTS SL.SELLER_COMMISSION(
ID varchar(255) not null,
SELLER_ID varchar(255),
SELLER_COMMISSION_STATUS varchar(255),
OPERATION_ID varchar(255),
PROFIT real,
QUANTITY real,
PESOS real,
TOTAL real,
CREATED_AT timestamp(6),
UPDATED_AT timestamp(6),
PRIMARY KEY (ID)
);

--Valores que tienen que existir para que funcione la app

INSERT INTO SL.CURRENCY(ID, NAME, BUY_PRICE, SELL_PRICE, UPDATED_AT) VALUES 
('fa77a255-3c87-4baa-84a1-1821030e24c9','Dolar Grande', 0, 0, '2023-10-10 01:00:00.000000'),
('cf0ece59-4343-4b19-bbb5-dc28fc0d0f3b','Dolar Chico y Cambio', 0, 0, '2023-10-10 01:00:00.000000'),
('9f294dab-b234-404b-8de9-9de0b9fe517b','Euro', 0, 0, '2023-10-10 01:00:00.000000'),
('f8f98478-5a7c-47aa-a473-ea044b7314b7','Real', 0, 0, '2023-10-10 01:00:00.000000');

INSERT INTO SL.MULTIBOX (ID, UPDATED_AT, CURRENCY_BOX, OPERATION_ID, OPERATION_TYPE, QUANTITY, QUANTITY_OPERATION, MULTI_BOX_STATUS) VALUES 
('218ab9a5-cbee-4dbc-8b34-3688a7868105','2023-10-10 01:00:00.000000','USD_HIGH', 'fdbd788a-0af2-4aa4-9275-2a510e98d50b', 'ingreso efectivo', 0, 0, 'resuelto'),
('c2c25e87-5c32-4891-872d-a721feebe49c','2023-10-10 01:00:00.000000','USD_LOW', '3772f3e3-b18d-4380-a553-be56513a863a', 'ingreso efectivo', 0, 0, 'resuelto'),
('7aac4b6c-f497-4a25-bf11-abb2562f9c30','2023-10-10 01:00:00.000000','EURO', '8fb768db-0beb-4526-92b0-ff176c01d7e3', 'ingreso efectivo', 0, 0, 'resuelto'),
('b993ea2a-6f14-479f-8682-4ca0c163e7c5','2023-10-10 01:00:00.000000','REAL', '83d8cd3a-a42f-43ba-8b92-169494bac7bd', 'ingreso efectivo', 0, 0, 'resuelto'),
('ba0987ce-ce1b-46c1-8157-5f1d94e86f88','2023-10-10 01:00:00.000000','PESO', '50c4aee6-c943-4689-ba8b-8bef38425bb6', 'ingreso efectivo', 0, 0, 'resuelto'),
('e1b68669-2220-42a5-8964-7d7c787a5fad','2023-10-10 01:00:00.000000','PESO_OFFICE', '260621c0-4918-443c-bf06-9a5ec1eba495', 'ingreso efectivo', 0, 0, 'resuelto');

INSERT INTO SL.BALANCE(ID, PROFIT, OPERATION_ID, CREATED_AT, UPDATED_AT, OPERATION_TYPE, QUANTITY_OPERATION) VALUES
('3f8bc78f-86b8-498a-9ce1-91b5e11a9a0b',0,'f2a2baa5-2638-4472-8168-0cb552418740', '2023-10-10 01:00:00.000000', '2023-10-10 01:00:00.000000','ganancia final', 0)
